{"uuid":"cede6d38-33c9-4217-b971-58b4514d4eaa","historyId":"86ab09575cd11e5bff65623b747c0736","fullName":"src/test/resources/features/EndToEndUser.feature:11","labels":[{"name":"tag","value":"User-Chaining"},{"name":"tag","value":"Get_All_Users"},{"name":"tag","value":"GET"},{"name":"host","value":"Sudha"},{"name":"thread","value":"48324@Sudha.main(1)"},{"name":"feature","value":"User API end to end positive scenarios"},{"name":"story","value":"Check if Admin able to retrieve all user details with valid endpoint and valid authorization"},{"name":"suite","value":"User API end to end positive scenarios"},{"name":"testClass","value":"Check if Admin able to retrieve all user details with valid endpoint and valid authorization"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/sudha/Desktop/Eclipse%20backup/UserAPI/src/test/resources/features/EndToEndUser.feature"},{"name":"package","value":"src.test.resources.features.EndToEndUser_feature.User API end to end positive scenarios"}],"links":[],"name":"Check if Admin able to retrieve all user details with valid endpoint and valid authorization","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"1 expectation failed.\nJSON path user_id doesn't match.\nExpected: a collection containing <0>\n  Actual: <[1, 12552, 14240, 15529, 14781, 14711, 15378, 10931, 10666, 11344, 11351, 10976, 11996, 11166, 10688, 11169, 10689, 11031, 10690, 10693, 11091, 10697, 10882, 11035, 10892, 10731, 10867, 10895, 10896, 10897, 10898, 11039, 10948, 10757, 10950, 11224, 11045, 11048, 11050, 10703, 12970, 11109, 10684, 11013, 11063, 11064, 10872, 11017, 11120, 10707, 11158, 11124, 11125, 11262, 11240, 10919, 10888, 14420, 12362, 14581, 14211, 14331, 11018, 11021, 11945, 11022, 10715, 14221, 14019, 14021, 14448, 14578, 14579, 14366, 12182, 12183, 14376, 11148, 11241, 11242, 11170, 11997, 11223, 11225, 11339, 11156, 11243, 11244, 11245, 11246, 11247, 11248, 11249, 11250, 11251, 11252, 11253, 11353, 11354, 11355, 11356, 11357, 11998, 11423, 11366, 11424, 11425, 13558, 11320, 11321, 11322, 11323, 11428, 10887, 11436, 11328, 11431, 11440, 11441, 11442, 13770, 11452, 11453, 11454, 11455, 11491, 11999, 11429, 13737, 14246, 11687, 11501, 11503, 11505, 11507, 12344, 15638, 11767, 11768, 15416, 15418, 13727, 13750, 13738, 13739, 11708, 11535, 11536, 11713, 11806, 15007, 11571, 11572, 11573, 11741, 12400, 11826, 13352, 14383, 12517, 12364, 12005, 12007, 12518, 15531, 12011, 11910, 12866, 14332, 12389, 15420, 12642, 13059, 12644, 12563, 12023, 12567, 15458, 15422, 12646, 12418, 12649, 15424, 12308, 12650, 12030, 12727, 11983, 13771, 15487, 13772, 13773, 14363, 12432, 13002, 14370, 14205, 13715, 13983, 12810, 12486, 12494, 12682, 12683, 12684, 12685, 12686, 14733, 13721, 13722, 13723, 13728, 14735, 14423, 13991, 14425, 13734, 13735, 13740, 13741, 13742, 13751, 13752, 13753, 13855, 13856, 11020, 13859, 13871, 14772, 13953, 14644, 14645, 12006, 13053, 14251, 12523, 11832, 12524, 12525, 12879, 12529, 14256, 12532, 11844, 14257, 15676, 12534, 14817, 14818, 12462, 13774, 12304, 12463, 12820, 13775, 12365, 15678, 13998, 12749, 11222, 13383, 12375, 13724, 13385, 13725, 12981, 13726, 13733, 13736, 13743, 13995, 13744, 12561, 12562, 12564, 12565, 12501, 12566, 13872, 12834, 13874, 12660, 14009, 14010, 14011, 14101, 13947, 15632, 12846, 15696, 14832, 15278, 15555, 10915, 12625, 15562, 15280, 15281, 14237, 14239, 14372, 15521, 15714, 15523, 15527, 15474, 15544, 15545, 15413, 15433, 15434, 15680, 15441, 15442, 15443, 15444, 15561, 15563, 15565, 15504, 15512, 15520]>\n","trace":"java.lang.AssertionError: 1 expectation failed.\nJSON path user_id doesn't match.\nExpected: a collection containing <0>\n  Actual: <[1, 12552, 14240, 15529, 14781, 14711, 15378, 10931, 10666, 11344, 11351, 10976, 11996, 11166, 10688, 11169, 10689, 11031, 10690, 10693, 11091, 10697, 10882, 11035, 10892, 10731, 10867, 10895, 10896, 10897, 10898, 11039, 10948, 10757, 10950, 11224, 11045, 11048, 11050, 10703, 12970, 11109, 10684, 11013, 11063, 11064, 10872, 11017, 11120, 10707, 11158, 11124, 11125, 11262, 11240, 10919, 10888, 14420, 12362, 14581, 14211, 14331, 11018, 11021, 11945, 11022, 10715, 14221, 14019, 14021, 14448, 14578, 14579, 14366, 12182, 12183, 14376, 11148, 11241, 11242, 11170, 11997, 11223, 11225, 11339, 11156, 11243, 11244, 11245, 11246, 11247, 11248, 11249, 11250, 11251, 11252, 11253, 11353, 11354, 11355, 11356, 11357, 11998, 11423, 11366, 11424, 11425, 13558, 11320, 11321, 11322, 11323, 11428, 10887, 11436, 11328, 11431, 11440, 11441, 11442, 13770, 11452, 11453, 11454, 11455, 11491, 11999, 11429, 13737, 14246, 11687, 11501, 11503, 11505, 11507, 12344, 15638, 11767, 11768, 15416, 15418, 13727, 13750, 13738, 13739, 11708, 11535, 11536, 11713, 11806, 15007, 11571, 11572, 11573, 11741, 12400, 11826, 13352, 14383, 12517, 12364, 12005, 12007, 12518, 15531, 12011, 11910, 12866, 14332, 12389, 15420, 12642, 13059, 12644, 12563, 12023, 12567, 15458, 15422, 12646, 12418, 12649, 15424, 12308, 12650, 12030, 12727, 11983, 13771, 15487, 13772, 13773, 14363, 12432, 13002, 14370, 14205, 13715, 13983, 12810, 12486, 12494, 12682, 12683, 12684, 12685, 12686, 14733, 13721, 13722, 13723, 13728, 14735, 14423, 13991, 14425, 13734, 13735, 13740, 13741, 13742, 13751, 13752, 13753, 13855, 13856, 11020, 13859, 13871, 14772, 13953, 14644, 14645, 12006, 13053, 14251, 12523, 11832, 12524, 12525, 12879, 12529, 14256, 12532, 11844, 14257, 15676, 12534, 14817, 14818, 12462, 13774, 12304, 12463, 12820, 13775, 12365, 15678, 13998, 12749, 11222, 13383, 12375, 13724, 13385, 13725, 12981, 13726, 13733, 13736, 13743, 13995, 13744, 12561, 12562, 12564, 12565, 12501, 12566, 13872, 12834, 13874, 12660, 14009, 14010, 14011, 14101, 13947, 15632, 12846, 15696, 14832, 15278, 15555, 10915, 12625, 15562, 15280, 15281, 14237, 14239, 14372, 15521, 15714, 15523, 15527, 15474, 15544, 15545, 15413, 15433, 15434, 15680, 15441, 15442, 15443, 15444, 15561, 15563, 15565, 15504, 15512, 15520]>\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$3.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat user.tests.UserTests.getUsersValidation(UserTests.java:43)\r\n\tat user.stepDefinitions.User_StepDefinitions.admin_receives_ok_status_with_response_body(User_StepDefinitions.java:62)\r\n\tat âœ½.Admin receives 200 OK Status with response body(file:///C:/Users/sudha/Desktop/Eclipse%20backup/UserAPI/src/test/resources/features/EndToEndUser.feature:14)\r\n"},"stage":"finished","steps":[{"name":"Given  Admin creates GET request for the user service API","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719338124042,"stop":1719338124044},{"name":"When  Admin sends a Get request","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719338124046,"stop":1719338124793},{"name":"Then  Admin receives 200 OK Status with response body","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"1 expectation failed.\nJSON path user_id doesn't match.\nExpected: a collection containing <0>\n  Actual: <[1, 12552, 14240, 15529, 14781, 14711, 15378, 10931, 10666, 11344, 11351, 10976, 11996, 11166, 10688, 11169, 10689, 11031, 10690, 10693, 11091, 10697, 10882, 11035, 10892, 10731, 10867, 10895, 10896, 10897, 10898, 11039, 10948, 10757, 10950, 11224, 11045, 11048, 11050, 10703, 12970, 11109, 10684, 11013, 11063, 11064, 10872, 11017, 11120, 10707, 11158, 11124, 11125, 11262, 11240, 10919, 10888, 14420, 12362, 14581, 14211, 14331, 11018, 11021, 11945, 11022, 10715, 14221, 14019, 14021, 14448, 14578, 14579, 14366, 12182, 12183, 14376, 11148, 11241, 11242, 11170, 11997, 11223, 11225, 11339, 11156, 11243, 11244, 11245, 11246, 11247, 11248, 11249, 11250, 11251, 11252, 11253, 11353, 11354, 11355, 11356, 11357, 11998, 11423, 11366, 11424, 11425, 13558, 11320, 11321, 11322, 11323, 11428, 10887, 11436, 11328, 11431, 11440, 11441, 11442, 13770, 11452, 11453, 11454, 11455, 11491, 11999, 11429, 13737, 14246, 11687, 11501, 11503, 11505, 11507, 12344, 15638, 11767, 11768, 15416, 15418, 13727, 13750, 13738, 13739, 11708, 11535, 11536, 11713, 11806, 15007, 11571, 11572, 11573, 11741, 12400, 11826, 13352, 14383, 12517, 12364, 12005, 12007, 12518, 15531, 12011, 11910, 12866, 14332, 12389, 15420, 12642, 13059, 12644, 12563, 12023, 12567, 15458, 15422, 12646, 12418, 12649, 15424, 12308, 12650, 12030, 12727, 11983, 13771, 15487, 13772, 13773, 14363, 12432, 13002, 14370, 14205, 13715, 13983, 12810, 12486, 12494, 12682, 12683, 12684, 12685, 12686, 14733, 13721, 13722, 13723, 13728, 14735, 14423, 13991, 14425, 13734, 13735, 13740, 13741, 13742, 13751, 13752, 13753, 13855, 13856, 11020, 13859, 13871, 14772, 13953, 14644, 14645, 12006, 13053, 14251, 12523, 11832, 12524, 12525, 12879, 12529, 14256, 12532, 11844, 14257, 15676, 12534, 14817, 14818, 12462, 13774, 12304, 12463, 12820, 13775, 12365, 15678, 13998, 12749, 11222, 13383, 12375, 13724, 13385, 13725, 12981, 13726, 13733, 13736, 13743, 13995, 13744, 12561, 12562, 12564, 12565, 12501, 12566, 13872, 12834, 13874, 12660, 14009, 14010, 14011, 14101, 13947, 15632, 12846, 15696, 14832, 15278, 15555, 10915, 12625, 15562, 15280, 15281, 14237, 14239, 14372, 15521, 15714, 15523, 15527, 15474, 15544, 15545, 15413, 15433, 15434, 15680, 15441, 15442, 15443, 15444, 15561, 15563, 15565, 15504, 15512, 15520]>\n","trace":"java.lang.AssertionError: 1 expectation failed.\nJSON path user_id doesn't match.\nExpected: a collection containing <0>\n  Actual: <[1, 12552, 14240, 15529, 14781, 14711, 15378, 10931, 10666, 11344, 11351, 10976, 11996, 11166, 10688, 11169, 10689, 11031, 10690, 10693, 11091, 10697, 10882, 11035, 10892, 10731, 10867, 10895, 10896, 10897, 10898, 11039, 10948, 10757, 10950, 11224, 11045, 11048, 11050, 10703, 12970, 11109, 10684, 11013, 11063, 11064, 10872, 11017, 11120, 10707, 11158, 11124, 11125, 11262, 11240, 10919, 10888, 14420, 12362, 14581, 14211, 14331, 11018, 11021, 11945, 11022, 10715, 14221, 14019, 14021, 14448, 14578, 14579, 14366, 12182, 12183, 14376, 11148, 11241, 11242, 11170, 11997, 11223, 11225, 11339, 11156, 11243, 11244, 11245, 11246, 11247, 11248, 11249, 11250, 11251, 11252, 11253, 11353, 11354, 11355, 11356, 11357, 11998, 11423, 11366, 11424, 11425, 13558, 11320, 11321, 11322, 11323, 11428, 10887, 11436, 11328, 11431, 11440, 11441, 11442, 13770, 11452, 11453, 11454, 11455, 11491, 11999, 11429, 13737, 14246, 11687, 11501, 11503, 11505, 11507, 12344, 15638, 11767, 11768, 15416, 15418, 13727, 13750, 13738, 13739, 11708, 11535, 11536, 11713, 11806, 15007, 11571, 11572, 11573, 11741, 12400, 11826, 13352, 14383, 12517, 12364, 12005, 12007, 12518, 15531, 12011, 11910, 12866, 14332, 12389, 15420, 12642, 13059, 12644, 12563, 12023, 12567, 15458, 15422, 12646, 12418, 12649, 15424, 12308, 12650, 12030, 12727, 11983, 13771, 15487, 13772, 13773, 14363, 12432, 13002, 14370, 14205, 13715, 13983, 12810, 12486, 12494, 12682, 12683, 12684, 12685, 12686, 14733, 13721, 13722, 13723, 13728, 14735, 14423, 13991, 14425, 13734, 13735, 13740, 13741, 13742, 13751, 13752, 13753, 13855, 13856, 11020, 13859, 13871, 14772, 13953, 14644, 14645, 12006, 13053, 14251, 12523, 11832, 12524, 12525, 12879, 12529, 14256, 12532, 11844, 14257, 15676, 12534, 14817, 14818, 12462, 13774, 12304, 12463, 12820, 13775, 12365, 15678, 13998, 12749, 11222, 13383, 12375, 13724, 13385, 13725, 12981, 13726, 13733, 13736, 13743, 13995, 13744, 12561, 12562, 12564, 12565, 12501, 12566, 13872, 12834, 13874, 12660, 14009, 14010, 14011, 14101, 13947, 15632, 12846, 15696, 14832, 15278, 15555, 10915, 12625, 15562, 15280, 15281, 14237, 14239, 14372, 15521, 15714, 15523, 15527, 15474, 15544, 15545, 15413, 15433, 15434, 15680, 15441, 15442, 15443, 15444, 15561, 15563, 15565, 15504, 15512, 15520]>\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$3.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat user.tests.UserTests.getUsersValidation(UserTests.java:43)\r\n\tat user.stepDefinitions.User_StepDefinitions.admin_receives_ok_status_with_response_body(User_StepDefinitions.java:62)\r\n\tat âœ½.Admin receives 200 OK Status with response body(file:///C:/Users/sudha/Desktop/Eclipse%20backup/UserAPI/src/test/resources/features/EndToEndUser.feature:14)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719338124794,"stop":1719338125020}],"attachments":[],"parameters":[],"start":1719338124041,"stop":1719338125021}